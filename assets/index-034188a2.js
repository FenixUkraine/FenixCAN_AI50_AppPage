(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const t of document.querySelectorAll('link[rel="modulepreload"]'))o(t);new MutationObserver(t=>{for(const c of t)if(c.type==="childList")for(const r of c.addedNodes)r.tagName==="LINK"&&r.rel==="modulepreload"&&o(r)}).observe(document,{childList:!0,subtree:!0});function n(t){const c={};return t.integrity&&(c.integrity=t.integrity),t.referrerPolicy&&(c.referrerPolicy=t.referrerPolicy),t.crossOrigin==="use-credentials"?c.credentials="include":t.crossOrigin==="anonymous"?c.credentials="omit":c.credentials="same-origin",c}function o(t){if(t.ep)return;t.ep=!0;const c=n(t);fetch(t.href,c)}})();async function v(i,e,n,o,t){try{o(await n())}catch(c){if(console.error(c),i===0)return t(c);u("Retrying in "+e+"s... ("+i+" tries left)"),setTimeout(function(){g(--i,e*2,n)},e*1e3)}}async function g(i,e,n){return new Promise((o,t)=>v(i,e,n,o,t))}function u(i){console.log("["+new Date().toJSON().substr(11,8)+"] "+i)}class f{constructor(){this.device=null,this.server=null,this._characteristics=new Map,console.log("BLE constructor")}async connect(e){console.log("Connecting to Bluetooth Device...",e);try{return await g(3,2,async()=>{u(`Connecting to Bluetooth Device ${e.name}...`);const n=await e.gatt.connect(),o=await n.getPrimaryService(511);console.log("Primary service",o);const t=await o.getCharacteristic(65297);console.log("Characteristic 1",t);const c=await o.getCharacteristic(65298);console.log("Characteristic 2",c);const r=await o.getCharacteristic(65299);return console.log("Characteristic 3",r),n})}catch(n){throw console.log("Argh! "+n),n}}async request(e,n){console.log("Requesting Bluetooth Device...",this);const o={acceptAllDevices:!0,optionalServices:[511]};this.device=await navigator.bluetooth.requestDevice(o);const t=c=>{console.log("Device disconnected.",c.target),this.connect(this.device).then(async r=>{this.server=r,await e({device:this.device,server:this.server})})};return this.device.addEventListener("gattserverdisconnected",t),this.server=await this.connect(this.device),await e({device:this.device,server:this.server}),{device:this.device,disconnect:()=>{console.log("Disconnecting from Bluetooth Device..."),this.device.removeEventListener("gattserverdisconnected",t),this.device.gatt.disconnect()}}}_cacheCharacteristic(e,n){return console.log("Getting Characteristic...",[e,n.toString(16)]),e.getCharacteristic(n).then(o=>{if(console.log("Caching Characteristic...",n.toString(16),o),this._characteristics.set(n,o),n==65281){o.startNotifications().then(c=>{console.log("Notifications started"),o.addEventListener("characteristicvaluechanged",r=>{console.log("Characteristic Value Changed",r);const s=r.target.value;console.log("Received ",s)})});const t=new Uint8Array([1,2,3,4,5,6,255]);o.writeValue(t).then(c=>{console.log("Write OK")})}})}async testSend(e){console.log("testSend",e,this);const o=await(await this.server.getPrimaryService(511)).getCharacteristic(65297);if(this.device)try{console.log("Sending: ",e,"to",o),await o.writeValue(e),console.log("Sent: ",e)}catch(t){console.log("Argh! "+t)}}}const y="/FenixCAN_AI50_AppPage/vite.svg";function w(i,e){const n=()=>{e.innerHTML="Connecting...",i.request(async({device:o,server:t})=>{console.log("Connected!",o,t),e.innerHTML="Connected!";const c=await t.getPrimaryService(511),r=await c.getCharacteristic(65297);console.log("Service",c),console.log("Characteristic",r),r.addEventListener("characteristicvaluechanged",l=>{console.log("Characteristic Value Changed",l);const h=l.target.value;console.log("Received ",h)});const s=await r.readValue();console.log("Readed:",[s]),await r.startNotifications()},()=>{console.log("Disconnected!"),e.innerHTML="Failed to connect."})};e.addEventListener("click",()=>n())}var a=!1;function p(i,e){const n=()=>{a?(a=!1,i.testSend(new Uint8Array([129,0])),e.innerHTML="Len On"):(a=!0,i.testSend(new Uint8Array([129,1])),e.innerHTML="Len Off")};e.innerHTML="Len On",e.addEventListener("click",()=>n())}const d=new f;async function C(i){i.innerHTML=`
        <div>
            <a href="#" target="_blank">
            <img src="${y}" class="logo" alt="Vite logo" />
            </a>
            <h1>Fenix CAN AI50</h1>
            <div class="card">
            <button id="connect" type="button">Connect to Fenix CAN AI50</button>
            </div>
            <div class="card">
            <button id="test_send" type="button">Test Send</button>
            </div>

        </div>
    `,w(d,document.querySelector("#connect")),p(d,document.querySelector("#test_send"))}console.log("Hello world!");const F=document.querySelector("#app");C(F);
